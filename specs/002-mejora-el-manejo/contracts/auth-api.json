{
  "openapi": "3.0.3",
  "info": {
    "title": "Flash Cards Authentication API",
    "description": "Authentication and user management endpoints for the flash cards application",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000/api",
      "description": "Development server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register new user account",
        "description": "Create a new user account with email/password authentication",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Authenticate user login",
        "description": "Authenticate user with email/password and return JWT tokens",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "headers": {
              "Set-Cookie": {
                "description": "httpOnly refresh token cookie",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many login attempts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user session",
        "description": "Invalidate user session and clear refresh token",
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh access token",
        "description": "Exchange refresh token for new access token",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get current user profile",
        "description": "Retrieve authenticated user's profile information",
        "tags": ["User Management"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "example": "password123",
            "description": "User's password (minimum 8 characters)"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "User's password"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "required": ["accessToken", "user"],
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "description": "JWT access token (15 minute expiry)"
          },
          "user": {
            "$ref": "#/components/schemas/UserProfile"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "required": ["accessToken"],
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "description": "New JWT access token"
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "required": ["id", "email", "role", "createdAt"],
        "properties": {
          "id": {
            "type": "integer",
            "example": 1,
            "description": "User's unique identifier"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com",
            "description": "User's email address"
          },
          "role": {
            "type": "string",
            "enum": ["user", "admin"],
            "example": "user",
            "description": "User's role in the system"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-07T10:00:00Z",
            "description": "Account creation timestamp"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "string",
            "example": "VALIDATION_ERROR",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "example": "Email address is required",
            "description": "Human-readable error message"
          },
          "details": {
            "type": "object",
            "description": "Additional error details"
          },
          "requestId": {
            "type": "string",
            "example": "req-123456789",
            "description": "Unique request identifier for debugging"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "required": ["success", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "example": true,
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully",
            "description": "Success message"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT access token in Authorization header"
      }
    }
  }
}